package com.buyauto.mapper.orders;

import java.math.BigDecimal;
import java.util.List;

import org.apache.ibatis.annotations.Param;

import com.buyauto.entity.orders.TOrders;

public interface TOrdersMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_orders
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_orders
     *
     * @mbggenerated
     */
    int insert(TOrders record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_orders
     *
     * @mbggenerated
     */
    int insertSelective(TOrders record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_orders
     *
     * @mbggenerated
     */
    TOrders selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_orders
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(TOrders record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_orders
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(TOrders record);

    /**
	 * 查询今日订单
	 * @param companyId 经销商Id
	 * @return
	 */
	Integer queryTodayOrder(@Param("companyId")Long companyId);
	
	/**
	 * 查询未付款订单
	 * @param companyId
	 * @return
	 */
	Integer queryUnpaidOrder(@Param("companyId")Long companyId);

	/**
	 * 查询待交付车辆
	 * @param companyId
	 * @return
	 */
	Integer queryWaitDeliverOrder(@Param("companyId")Long companyId);
	/**
	 * 查询今日支付定金
	 * @param companyId
	 * @return
	 */
	BigDecimal queryDepositOrder(@Param("companyId")Long companyId);

	/**
	 * 查询日支付尾款
	 * @param companyId
	 * @return
	 */
	BigDecimal queryRetainageOrder(@Param("companyId")Long companyId);

	/**
	 * 查询所有定金超时的订单
	 * @return
	 */
	List<TOrders> queryDepositOvertime();
	/**
	 * 根据carId查找订单id
	 * @param carId
	 * @return
	 */
	TOrders getOrderByCarId(@Param("carId") Long carId);
	
	List<TOrders> queryAutomaticTakeCar();

	/**
	 * 判断该用户是否可以升级  总月
	 * @param id
	 * @param string
	 * @param string2
	 * @param string3
	 * @return
	 */
	Integer queryTotalExamine(@Param("id")Long id, @Param("month")String month, @Param("totalSales")String totalSales,
			@Param("totalAmount")String totalAmount);

	/**
	 * 判断用户是否可以升级 每月
	 * @param j
	 * @param i
	 * @param monthlySales
	 * @param monthlyAmount
	 * @param id
	 * @return
	 */
	Integer queryEachExamine(@Param("endMonth")int j, @Param("startMonth")int i,@Param("monthlySales") String monthlySales, @Param("monthlyAmount")String monthlyAmount,
			@Param("id")Long id);

	/**
	 * 判断用户是否降级 总月
	 * @param id
	 * @param string
	 * @param string2
	 * @param string3
	 * @return
	 */
	Integer queryTotalExamineDownGrade(@Param("id")Long id, @Param("month")String month, @Param("totalSales")String totalSales,
			@Param("totalAmount")String totalAmount);

	/**
	 * 判断用户是否降级 每月
	 * @param j
	 * @param i
	 * @param string
	 * @param string2
	 * @param id
	 * @return
	 */
	Integer queryEachExamineDownGrade(@Param("endMonth")int j, @Param("startMonth")int i,@Param("monthlySales") String monthlySales, @Param("monthlyAmount")String monthlyAmount,
			@Param("id")Long id);

	/**
	 * 查询用户月销售额
	 * @param id
	 * @return
	 */
	Integer querySalesVolume(@Param("id")Long id);

}