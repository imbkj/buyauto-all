<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/websocket
		http://www.springframework.org/schema/websocket/spring-websocket.xsd">

	<mvc:resources mapping="/res/**" location="/WEB-INF/res/">
	</mvc:resources>

	<!-- 国际化配置 -->
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
	</mvc:interceptors>


	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.controller.interceptor.BuyautoInterceptor">
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- cookie国际化配置 -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />

	<!-- 请求信息转换 容器 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<util:list id="beanList">
				<ref bean="stringHttpMessageConverter" />
				<ref bean="mappingJackson2HttpMessageConverter" />
				<!-- <ref bean="gsonHttpMessageConverter" /> -->
			</util:list>
		</property>
	</bean>


	<!-- string内心信息转换 -->
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- jackson信息转换 -->
	<bean id="mappingJackson2HttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />

	<!-- 解析器配置 -->
	<bean id="velocityConfigurer"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath" value="/WEB-INF/view/vm/" />
		<property name="configLocation" value="classpath:velocity.properties" />
	</bean>


	<!-- velocity解析器 -->
	<bean
		class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="suffix" value=".vm" />
		<property name="prefix" value="" />
		<property name="cache" value="true" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="order" value="1" />
		<property name="requestContextAttribute" value="request" />
		<property name="viewClass" value="com.buyauto.util.core.tool.web.VCToolboxView" />
		<property name="toolboxConfigLocation" value="/WEB-INF/toolbox.xml" />
	</bean>
	<!-- <bean class="org.springframework.web.servlet.view.velocity.VelocityViewResolver"> 
		<property name="suffix" value=".vm" /> <property name="prefix" value="" /> 
		<property name="cache" value="true" /> <property name="contentType" value="text/html;charset=UTF-8" 
		/> <property name="order" value="1"/> <property name="exposeSpringMacroHelpers" 
		value="true"/> <property name="requestContextAttribute" value="context"/> 
		<property name="exposeRequestAttributes" value="true"/> <property name="exposeSessionAttributes" 
		value="true"/> <property name="toolboxConfigLocation" value="/WEB-INF/toolbox.xml"/> 
		</bean> -->

	<!-- jsp视图解析器 -->
	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="2" />
	</bean>

	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="200000" />
	</bean>

	<!-- 采用注解方式配置MVC -->
	<mvc:annotation-driven
		content-negotiation-manager="contentNegotiationManager">
		<mvc:argument-resolvers>
			<bean
				class="org.springframework.data.web.PageableHandlerMethodArgumentResolver" />
		</mvc:argument-resolvers>
	</mvc:annotation-driven>

	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="favorPathExtension" value="true" />
		<property name="favorParameter" value="true" />
		<property name="defaultContentType" value="text/html" />
		<property name="mediaTypes">
			<value>
				json=application/json
				xml=application/xml
			</value>
		</property>
	</bean>

	<!-- <mvc:resources mapping="/static/**" location="/WEB-INF/res/"> -->
	<!-- <mvc:resource-chain resource-cache="true"> <mvc:resolvers> <bean class="org.springframework.web.servlet.resource.GzipResourceResolver"/> 
		<bean class="org.springframework.web.servlet.resource.CachingResourceResolver"> 
		<constructor-arg ref="cache"/> </bean> <bean class="org.springframework.web.servlet.resource.VersionResourceResolver"> 
		<property name="strategyMap"> <map> <entry key="/**"> <bean class="org.springframework.web.servlet.resource.ContentVersionStrategy"/> 
		</entry> </map> </property> </bean> <bean class="org.springframework.web.servlet.resource.PathResourceResolver"/> 
		</mvc:resolvers> <mvc:transformers> <bean class="org.springframework.web.servlet.resource.CachingResourceTransformer"> 
		<constructor-arg ref="cache"/> </bean> <bean class="org.springframework.web.servlet.resource.CssLinkResourceTransformer"/> 
		</mvc:transformers> </mvc:resource-chain> -->
	<!-- </mvc:resources> -->




	<!-- 扫描基础的controller配置 -->
	<import resource="classpath:spring/sevlet-controller.xml" />

	<import resource="classpath:spring/sevlet-soa-server.xml" />





	<!-- <mvc:annotation-driven></mvc:annotation-driven> -->
	<!-- <mvc:annotation-driven validator=""/> -->

	<!-- <context:component-scan base-package="com.zeus.app.webapp.controller"/> -->
	<!-- <context:property-placeholder location="classpath:/com/acme/jdbc.properties"/> -->

	<!-- 建立部署模式，dev开发环境，online生产环境 -->
	<!-- <beans profile="dev"> <jdbc:embedded-database> <jdbc:script/> </jdbc:embedded-database> 
		</beans> -->



	<!-- <mvc:resources mapping="/resources/**" location="/, classpath:/META-INF/public-web-resources/"/> -->
	<!-- <mvc:view-controller path="/" view-name="home"/> -->
	<!-- <mvc:resources mapping="/resources/**" location="/public-resources/" 
		cache-period="31556926"/> -->
	<!-- <mvc:default-servlet-handler default-servlet-name="myCustomDefaultServlet"/> -->

	<!-- 静态资源缓存与过滤 -->
	<!-- <mvc:resources location="/res" mapping="/res/"> <mvc:resource-chain 
		resource-cache="true"> <mvc:resolvers> <mvc:content-version-strategy patterns="/"/> 
		</mvc:resolvers> </mvc:resource-chain> </mvc:resources> -->


</beans>
